import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.pluckerpluck.votesim.election.Candidate;
import com.pluckerpluck.votesim.election.Election;
import com.pluckerpluck.votesim.election.Strategy;
import com.pluckerpluck.votesim.election.Voter;
import com.pluckerpluck.votesim.election.system.range.RangeElection;
import com.pluckerpluck.votesim.election.system.range.RangeHonestStrategy;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {


    public static void main(String[] args) {
        Set<Candidate> candidates = new HashSet<>();
        Candidate candidateA = new Candidate("A");
        candidates.add(candidateA);
        Candidate candidateB = new Candidate("B");
        candidates.add(candidateB);
        Candidate candidateC = new Candidate("C");
        candidates.add(candidateC);


        Election election = new RangeElection(candidates);

        Set<Voter> voters = new HashSet<>();

        // Create a bunch of A lovers!
        Map<Candidate, Double> aLoversUtility = new HashMap<>();
        aLoversUtility.put(candidateA, 1.);
        aLoversUtility.put(candidateB, 0.1);
        aLoversUtility.put(candidateC, 0.);

        for (int i = 0; i < 2000; i++) {
            voters.add(new Voter(aLoversUtility));
        }

        // They're all honest
        Strategy strat = new RangeHonestStrategy();

        // Run the elections a lot of times to test speed
        for (int i = 0; i < 3000; i++) {
            for(Voter voter : voters) {
                election.vote(voter, voter.vote(strat));
            }
        }

        System.out.println(election.getWinner());
    }
}
